{"version":3,"sources":["../../client.js"],"names":["TextScramble","el","chars","update","bind","newText","oldText","innerText","length","Math","max","queue","i","from","to","start","floor","random","end","push","cancelAnimationFrame","frameRequest","frame","output","complete","n","char","randomChar","innerHTML","requestAnimationFrame","initScramblers","ntsScrambler","document","getElementById","scramblerFrequency","phrases","padWithDots","str","maxPaddingString","reduce","a","b","numToAdd","dots","selectedIndex","scrambleText","setText","setInterval","aphexCountdown","$countdown","$","Date","valueOf","c","text","ready","ibeam","flashIbeam"],"mappings":"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","file":"prod.js","sourcesContent":["class TextScramble {\n    constructor(el) {\n        this.el = el;\n        // this.chars = '!<>-_\\\\/[]{}—=+*^?#________';\n        this.chars = '!<>-_\\\\/[]{}—=+*^?#___20173';\n        this.update = this.update.bind(this)\n    }\n\n    setText(newText) {\n        const oldText = this.el.innerText;\n        const length = Math.max(oldText.length, newText.length);\n        this.queue = [];\n\n        for (let i = 0; i < length; i++) {\n            const from = oldText[i] || '';\n            const to = newText[i] || '';\n\n            const start = Math.floor(Math.random() * 40);\n            const end = start + Math.floor(Math.random() * 40);\n\n            this.queue.push({ from, to, start, end })\n        }\n        cancelAnimationFrame(this.frameRequest);\n        this.frame = 0;\n        this.update();\n    }\n\n    update() {\n        let output = '';\n        let complete = 0;\n        for (let i = 0, n = this.queue.length; i < n; i++) {\n            let { from, to, start, end, char } = this.queue[i];\n            if (this.frame >= end) {\n                complete++;\n                output += to\n            } else if (this.frame >= start) {\n                if (!char || Math.random() < 0.28) {\n                    char = this.randomChar();\n                    this.queue[i].char = char\n                }\n                output += `<span class=\"dud\">${char}</span>`\n            } else {\n                output += from\n            }\n        }\n        this.el.innerHTML = output;\n        if (complete === this.queue.length) {\n            return;\n        } else {\n            this.frameRequest = requestAnimationFrame(this.update);\n            this.frame++\n        }\n    }\n\n    randomChar() {\n        return this.chars[Math.floor(Math.random() * this.chars.length)]\n    }\n}\n\nfunction initScramblers() {\n    // const labelScrambler = new TextScramble(document.getElementById('aphex-label'));\n    const ntsScrambler = new TextScramble(document.getElementById('nts-label'));\n\n    let scramblerFrequency = 2000;\n    let phrases = [\n        \"APHEX TWIN\",\n        \"INCOMING\",\n    ];\n\n    function padWithDots(str) {\n        let maxPaddingString = phrases.reduce( function(a, b) {\n            return a.length > b.length ? a : b;\n        });\n\n        let numToAdd = maxPaddingString.length - str.length;\n\n        let dots = '';\n        for (let i=0; i < numToAdd; i++) {\n            dots = dots + \".\";\n        }\n\n        return str + dots;\n    }\n\n    let selectedIndex = 0;\n    let scrambleText = function() {\n        selectedIndex === 0\n            ? selectedIndex++\n            : selectedIndex--;\n\n        // labelScrambler.setText( padWithDots(phrases[selectedIndex]));\n        ntsScrambler.setText(\"NTS\");\n    };\n    scrambleText();\n    setInterval( scrambleText, scramblerFrequency);\n}\n\nfunction aphexCountdown() {\n    let $countdown = $('#countdown');\n\n    let a = new Date().valueOf();\n    let b = 1499119200000;\n\n    let c = b - a;\n\n    $countdown.text(c);\n    setInterval(function() {\n        $countdown.text(c--);\n    }, 100);\n}\n\n$(document).ready( function () {\n    aphexCountdown();\n    initScramblers();\n\n    let ibeam = $('#flashing-beam');\n    let flashIbeam = function() {\n        ibeam.text().length\n            ? ibeam.text('')\n            : ibeam.text('|');\n    };\n    flashIbeam();\n    setInterval( flashIbeam, 500);\n});"]}